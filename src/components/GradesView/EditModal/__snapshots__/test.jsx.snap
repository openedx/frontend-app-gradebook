// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`EditModal Component snapshots gradeOverrideHistoryError is and empty and open is true modal open and StatusAlert showing 1`] = `
<ModalDialog
  closeLabel="Close"
  hasCloseButton={true}
  isBlocking={false}
  isFullscreenOnMobile={true}
  isFullscreenScroll={false}
  isOpen={true}
  onClose={[MockFunction this.closeAssignmentModal]}
  size="xl"
  variant="default"
>
  <ModalDialogHeader
    as="div"
  >
    <ModalDialogTitle
      as="h2"
    >
      <FormattedMessage
        defaultMessage="Edit Grades"
        description="Edit Modal title"
        id="gradebook.GradesView.EditModal.title"
      />
    </ModalDialogTitle>
  </ModalDialogHeader>
  <ModalDialogBody
    as="div"
  >
    <div>
      <ModalHeaders />
      <ForwardRef
        closeLabel="Dismiss"
        dismissible={false}
        onClose={[Function]}
        show={true}
        stacked={false}
        transition={
          Object {
            "$$typeof": Symbol(react.forward_ref),
            "defaultProps": Object {
              "appear": false,
              "in": false,
              "mountOnEnter": false,
              "timeout": 300,
              "unmountOnExit": false,
            },
            "displayName": "Fade",
            "render": [Function],
          }
        }
        variant="danger"
      >
        Weve been trying to contact you regarding...
      </ForwardRef>
      <OverrideTable />
      <div>
        <FormattedMessage
          defaultMessage="Showing most recent actions (max 5). To see more, please contact support"
          description="Edit Modal visibility hint message"
          id="gradebook.GradesView.EditModal.contactSupport"
        />
      </div>
      <div>
        <FormattedMessage
          defaultMessage="Note: Once you save, your changes will be visible to students."
          description="Edit Modal saved changes effect hint"
          id="gradebook.GradesView.EditModal.saveVisibility"
        />
      </div>
    </div>
  </ModalDialogBody>
  <ModalDialogFooter
    as="div"
  >
    <ActionRow
      as="div"
      isStacked={false}
    >
      <ForwardRef
        as={
          Object {
            "$$typeof": Symbol(react.forward_ref),
            "Deprecated": [Function],
            "defaultProps": Object {
              "active": false,
              "children": undefined,
              "className": undefined,
              "disabled": false,
              "iconAfter": undefined,
              "iconBefore": undefined,
              "variant": "primary",
            },
            "propTypes": Object {
              "children": [Function],
              "className": [Function],
              "iconAfter": [Function],
              "iconBefore": [Function],
            },
            "render": [Function],
          }
        }
        variant="tertiary"
      >
        <FormattedMessage
          defaultMessage="Cancel"
          description="Edit Modal close button text"
          id="gradebook.GradesView.EditModal.closeText"
        />
      </ForwardRef>
      <ForwardRef
        active={false}
        disabled={false}
        onClick={[MockFunction this.handleAdjustedGradeClick]}
        variant="primary"
      >
        <FormattedMessage
          defaultMessage="Save Grades"
          description="Edit Modal Save button label"
          id="gradebook.GradesView.EditModal.saveGrade"
        />
      </ForwardRef>
    </ActionRow>
  </ModalDialogFooter>
</ModalDialog>
`;

exports[`EditModal Component snapshots gradeOverrideHistoryError is empty and open is false modal closed and StatusAlert closed 1`] = `
<ModalDialog
  closeLabel="Close"
  hasCloseButton={true}
  isBlocking={false}
  isFullscreenOnMobile={true}
  isFullscreenScroll={false}
  isOpen={true}
  onClose={[MockFunction this.closeAssignmentModal]}
  size="xl"
  variant="default"
>
  <ModalDialogHeader
    as="div"
  >
    <ModalDialogTitle
      as="h2"
    >
      <FormattedMessage
        defaultMessage="Edit Grades"
        description="Edit Modal title"
        id="gradebook.GradesView.EditModal.title"
      />
    </ModalDialogTitle>
  </ModalDialogHeader>
  <ModalDialogBody
    as="div"
  >
    <div>
      <ModalHeaders />
      <ForwardRef
        closeLabel="Dismiss"
        dismissible={false}
        onClose={[Function]}
        show={false}
        stacked={false}
        transition={
          Object {
            "$$typeof": Symbol(react.forward_ref),
            "defaultProps": Object {
              "appear": false,
              "in": false,
              "mountOnEnter": false,
              "timeout": 300,
              "unmountOnExit": false,
            },
            "displayName": "Fade",
            "render": [Function],
          }
        }
        variant="danger"
      >
        
      </ForwardRef>
      <OverrideTable />
      <div>
        <FormattedMessage
          defaultMessage="Showing most recent actions (max 5). To see more, please contact support"
          description="Edit Modal visibility hint message"
          id="gradebook.GradesView.EditModal.contactSupport"
        />
      </div>
      <div>
        <FormattedMessage
          defaultMessage="Note: Once you save, your changes will be visible to students."
          description="Edit Modal saved changes effect hint"
          id="gradebook.GradesView.EditModal.saveVisibility"
        />
      </div>
    </div>
  </ModalDialogBody>
  <ModalDialogFooter
    as="div"
  >
    <ActionRow
      as="div"
      isStacked={false}
    >
      <ForwardRef
        as={
          Object {
            "$$typeof": Symbol(react.forward_ref),
            "Deprecated": [Function],
            "defaultProps": Object {
              "active": false,
              "children": undefined,
              "className": undefined,
              "disabled": false,
              "iconAfter": undefined,
              "iconBefore": undefined,
              "variant": "primary",
            },
            "propTypes": Object {
              "children": [Function],
              "className": [Function],
              "iconAfter": [Function],
              "iconBefore": [Function],
            },
            "render": [Function],
          }
        }
        variant="tertiary"
      >
        <FormattedMessage
          defaultMessage="Cancel"
          description="Edit Modal close button text"
          id="gradebook.GradesView.EditModal.closeText"
        />
      </ForwardRef>
      <ForwardRef
        active={false}
        disabled={false}
        onClick={[MockFunction this.handleAdjustedGradeClick]}
        variant="primary"
      >
        <FormattedMessage
          defaultMessage="Save Grades"
          description="Edit Modal Save button label"
          id="gradebook.GradesView.EditModal.saveGrade"
        />
      </ForwardRef>
    </ActionRow>
  </ModalDialogFooter>
</ModalDialog>
`;
